---

- name: Setup benchmark node 
  hosts: 'all'
  tasks:
    - name: Update and upgrade apt
      register: updatesys
      apt:
        name: "*"
        state: latest
        update_cache: yes
    
    - name: Update conda
      conda:
        name: conda
        state: latest
        executeable: /opt/conda/bin/conda

    - name: Create conda env
      conda:
        name: python
        version: 3.10
        environment: Pyvol
        state: present

    - name: Install packages in conda env
      conda:
        name:
          - ray
          - torch
          - torchvision
          - jupyter
          - selenium
          - dill
          - scipy
        environment: Pyvol

    - name: Install chrome and firefox
      block:
        - get_url: url="https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_103.0.5060.53-1_amd64.deb" dest="/root/chrome.deb"
        - get_url: url="https://chromedriver.storage.googleapis.com/index.html?path=103.0.5060.53/chromedriver_linux64.zip" dest="/root/chromedriver.zip"
        - shell: dpkg -i chrome.deb
        - shell: unzip chromedriver.zip
        - get_url: url="https://ftp.mozilla.org/pub/firefox/releases/102.0esr/linux-x86_64/en-US/firefox-102.0esr.tar.bz2" dest="firefox.tar.bz2"
        - get_url: url="https://github.com/mozilla/geckodriver/releases/download/v0.31.0/geckodriver-v0.31.0-linux64.tar.gz" dest="geckodriver.tar.gz"
        - shell: tar xvf geckodriver.tar.gz

    - name: Create an user
      user:
        name: bankde
        shell: /bin/bash
        createhome: yes
        home: /home/bankde

    - name: Setup jupyter
      block:
        - name: Setup config
          shell: jupyter notebook --generate-config -y
          args:
            chdir: /home/bankde
        - name: Edit config 
          replace:
            path: /home/bankde/.jupyter/jupyter_notebook_config.py
            regexp: "# c.NotebookApp.ip = 'localhost'"
            replace: "c.NotebookApp.ip = '{{ ansible_default_ipv4.address }}'" 
        - name: Create key for jupyter 
          block:
            - openssl_privatekey:
                path: /home/bankde/mykey.key 
                size: 2048
            - openssl_csr:
                path: /home/bankde/mycsr.csr 
                privatekey_path: /home/bankde/mykey.key 
            - openssl_certificate:
                provider: selfsigned
                path: /home/bankde/mycert.pem
                privatekey_path: /home/bankde/mykey.key 
                csr_path: /home/bankde/mycsr.csr 
      become: yes
      become_user: bankde

        #    - name: Run jupyter
        #      block:
        #        - name: jupyter background
        #          shell: jupyter notebook --certfile=mycert.pem --keyfile=mykey.key >/tmp/jupyter_token 2>&1
        #          args:
        #            chdir: /home/bankde
        #          async: 2592000
        #          poll: 0
        #        - name: jupyter starting
        #          pause:
        #            seconds: 5
        #        - name: jupyter token
        #          block:
        #            - name: read file
        #              command: "tail -5 /tmp/jupyter_token"
        #              register: jupyter_token
        #            - debug:
        #                var: jupyter_token.stdout_lines
        #      become: yes
        #      become_user: bankde


